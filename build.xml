<?xml version="1.0"?>

<!--
  ~ Copyright (c) 2007-2008 Concurrent, Inc. All Rights Reserved.
  ~
  ~ Project and contact information: http://www.cascading.org/
  ~
  ~ This file is part of the Cascading project.
  ~
  ~ Cascading is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ Cascading is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with Cascading.  If not, see <http://www.gnu.org/licenses/>.
  -->

<project name="simulator" default="compile" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

  <dirname property="simulator.basedir" file="${ant.file.simulator}"/>

  <property file="${user.home}/build.properties"/>
  <property file="${simulator.basedir}/version.properties"/>
  <property file="${simulator.basedir}/build.properties"/>

  <property name="javac.debug" value="true"/>
  <property name="test.haltonerror" value="true"/>

  <property name="src" location="${simulator.basedir}/src"/>
  <property name="src.java" location="${src}/java"/>
  <property name="src.test" location="${src}/test"/>

  <property name="build" location="${simulator.basedir}/build/"/>
  <property name="build.classes" location="${build}"/>
  <property name="build.java" location="${build.classes}/java"/>
  <property name="build.test" location="${build.classes}/test"/>

  <property name="test.results" location="${build}/testresults"/>
  <property name="test.showoutput" value="no"/>


  <property name="lib" location="${simulator.basedir}/lib"/>
  <property name="dist" location="${simulator.basedir}/dist"/>
  <property name="javadoc" location="${simulator.basedir}/javadoc"/>
  <property name="log" location="${simulator.basedir}/log"/>

  <path id="project.class.path">
    <pathelement location="${build.java}"/>
    <pathelement location="${build.test}"/>

    <fileset dir="${lib}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <path id="project.src.path">
    <pathelement location="${src.java}"/>
    <pathelement location="${src.test}"/>
  </path>

  <path id="javadoc.src.path">
    <pathelement location="${src.java}"/>
  </path>

  <!-- sets up environment -->
  <target name="init">
    <echo message="initializing cascading environment..."/>

    <mkdir dir="${build.java}"/>
    <mkdir dir="${build.test}"/>
    <mkdir dir="${test.results}"/>

    <property name="CLASSPATH" refid="project.class.path"/>
    <!--<echo message="${CLASSPATH}"/>-->
  </target>

  <target name="compile" depends="init">
    <echo message="building simpulator..."/>

    <javac srcdir="${src.java}" destdir="${build.java}" verbose="off" debug="${javac.debug}">
      <classpath refid="project.class.path"/>
    </javac>

    <copy todir="${build.java}">
      <fileset dir="${src.java}">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>

    <javac srcdir="${src.test}" destdir="${build.test}" verbose="off" debug="${javac.debug}">
      <classpath refid="project.class.path"/>
    </javac>

    <copy todir="${build.test}">
      <fileset dir="${src.test}">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
  </target>

  <target name="javadoc" depends="init">
    <echo message="creating cascading javadoc..."/>
    <delete dir="${javadoc}"/>
    <mkdir dir="${javadoc}"/>

    <javadoc sourcepathref="javadoc.src.path"
             destdir="${javadoc}"
             packagenames="cascading.*"
             windowtitle="Cascading">
      <link href="http://java.sun.com/javase/6/docs/api/"/>
      <link href="http://www.janino.net/javadoc/"/>
      <link href="http://www.jgrapht.org/javadoc/"/>
      <link href="http://hadoop.apache.org/core/docs/current/api/index.html"/>
      <bottom><![CDATA[<i>Copyright &#169; 2007-2008 Concurrent, Inc. All Rights Reserved.</i>]]></bottom>
    </javadoc>

  </target>

  <!-- runs JUnit tests -->
  <target name="test" depends="init, compile">
    <echo message="running all cascading tests..."/>

    <mkdir dir="build/test/log"/>

    <junit printsummary="true" showoutput="${test.showoutput}" fork="yes" haltonerror="no" haltonfailure="no" dir="."
           maxmemory="756m">

      <sysproperty key="test.cluster.enabled" value="${test.cluster.enabled}"/>
      <sysproperty key="test.build.data" value="data"/>
      <sysproperty key="hadoop.log.dir" value="build/test/log"/>

      <!--<jvmarg value="-Xdebug"/>-->
      <!--<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"/>-->

      <classpath>
        <path refid="project.class.path"/>
        <pathelement path="${java.class.path}"/>
      </classpath>
      <formatter type="plain" usefile="true"/>

      <test name="${testcase}" todir="${test.results}" if="testcase" haltonfailure="${test.haltonerror}"/>
      <batchtest todir="${test.results}" haltonfailure="${test.haltonerror}" unless="testcase">
        <fileset dir="${src.test}">
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>
    </junit>

  </target>

  <!-- cleans up build artifacts -->
  <target name="clean">
    <echo message="cleaning cascading..."/>
    <delete dir="${build}"/>
    <delete dir="${javadoc}"/>
  </target>

  <!-- removes build -->
  <target name="nuke">
    <echo message="nuking..."/>
    <delete dir="${build}"/>
    <delete dir="${javadoc}"/>
    <delete dir="${dist}"/>
    <delete dir="${log}"/>

    <delete>
      <fileset dir="." includes="${ant.project.name}*.tgz"/>
      <fileset dir="." includes="TEST-*"/>
      <fileset dir="." includes="junit*.properties"/>
      <fileset dir="." includes="**/.DS_Store"/>
    </delete>

  </target>

  <target name="resolve" description="--> retrieve dependencies with ivy">

    <ivy:settings file="etc/ivysettings.xml"/>
    <ivy:retrieve pattern="${ivy.lib.dir}/[artifact].[ext]"/>

  </target>

  <target name="clean-cache" description="--> clean the ivy cache">
    <ivy:settings file="etc/ivysettings.xml"/>
    <ivy:cleancache/>
  </target>

</project>
